(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{539:function(t,r,a){"use strict";a.r(r);var e=a(6),s=Object(e.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-原型对象和构造函数有何关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-原型对象和构造函数有何关系"}},[t._v("#")]),t._v(" 1. 原型对象和构造函数有何关系？")]),t._v(" "),a("p",[t._v("在JavaScript中，每当定义一个函数数据类型（普通函数、类）时候，都会天生自带一个prototype属性，这个属性指向函数的原型对象。")]),t._v(" "),a("p",[t._v("当函数经过new调用时，这个函数就成为了构造函数，返回一个全新的实例对象，这个实例对象有一个__proto__属性，指向构造函数的原型对象。")]),t._v(" "),a("p",[a("img",{attrs:{src:"3.png",alt:"原型"}})]),t._v(" "),a("h2",{attrs:{id:"_2-描述原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-描述原型链"}},[t._v("#")]),t._v(" 2. 描述原型链")]),t._v(" "),a("p",[t._v("JavaScript对象通过prototype指向父类对象，知道指向Oject对象为止，这样就形成了一个原型指向的链条，即原型链。")]),t._v(" "),a("p",[a("img",{attrs:{src:"4.png",alt:"原型链"}})]),t._v(" "),a("ul",[a("li",[t._v("对象的hasOwnProperty() 来检查对象自身中是否含有该属性")]),t._v(" "),a("li",[t._v("使用in检查对象中是否含有某个属性时，如果对象中没有但是原型链中有，也返回true")])])])}),[],!1,null,null,null);r.default=s.exports}}]);